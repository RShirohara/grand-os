name: "Create Release PR"

on:
  schedule:
    - cron: "0 9 * * 5"
  workflow_dispatch:
    inputs:
      info:
        description: "Reasons for starting the workflow."
        required: true

env:
  GIT_DEFAULT_BRANCH: "main"
  GIT_RELEASE_BRANCH: "bump-os-image-version"
  GITHUB_RELEASE_LABEL: "Type: Release"

jobs:
  create_pr:
    name: "Create PR"
    runs-on: "ubuntu-latest"

    permissions:
      contents: "write"
      pull-requests: "write"

    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683" # v4.2.2
        with:
          fetch-depth: 0

      - name: "Setup Git"
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: "Generate changelog"
        id: "generate_changelog"
        run: |
          set -o "errexit" -o "nounset"

          LATEST_TAG=$(
            git for-each-ref \
                --sort="-creatordate" \
                --count=1 \
                --format="%(refname:short)" \
                "refs/tags/"
          )
          CHANGELOG=$(
            git log --reverse --pretty="format:%s" "${LATEST_TAG}..${GIT_DEFAULT_BRANCH}" \
            | jq --null-input --raw-input --compact-output "[inputs]" \
            | sed --expression="s|'|'\\\\''|g"
          )
          echo "changelog=${CHANGELOG}" | tee --append "${GITHUB_OUTPUT}"

      - name: "Increase image version"
        id: "increase_version"
        run: |
          set -o "errexit" -o "nounset"

          _MAJOR_VERSION=$(
            date "+%Y%m%d"
          )
          set +o "errexit"
          _MINOR_VERSION=$(
            _PREFIX=$(
              grep "^RELEASE_VERSION=\"${_MAJOR_VERSION}" \
                  ./files/scripts/update-os-release.sh \
              | sed --expression="s|^.*=||g" --expression="s|\"||g" \
              | cut --delimiter="." --fields="2" \
              | xargs --replace="@" expr @ + 1
            )
            echo "${_PREFIX:-0}"
          )
          set -o "errexit"
          RELEASE_VERSION="${_MAJOR_VERSION}.${_MINOR_VERSION}"
          echo "version=${RELEASE_VERSION}" | tee --append "${GITHUB_OUTPUT}"

      - name: "Generate description"
        run: |
          set -o "errexit" -o "nounset"

          cat << MESSAGE > ./message.md
          chore: bump GrandOS image version to \`v${{ steps.increase_version.outputs.version }}\`
          MESSAGE

          cat << MESSAGE > ./detail.md
          Bump GrandOS image version to \`v${{ steps.increase_version.outputs.version }}\`.

          ## Changelog

          $(
            _COMMITS=$(
              echo '${{ steps.generate_changelog.outputs.changelog }}' \
              | jq --raw-output ".[]" \
              | sed --expression="s|^|- |g"
            )
            echo "${_COMMITS:-None.}"
          )

          ## Note

          This pull request was created by workflow triggered by ${{ github.event_name }}.
          Additional info: "${{ github.event.inputs.info || 'None.' }}"
          MESSAGE

      - name: "Commit"
        env:
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          set -o "errexit" -o "nounset"

          sed --expression="s|^RELEASE_VERSION=\".*\"$|RELEASE_VERSION=\"${{ steps.increase_version.outputs.version }}\"|g" \
              ./files/scripts/update-os-release.sh \
              > ./update-os-release.sh

          git switch --create "${GIT_RELEASE_BRANCH}"
          git push --set-upstream origin "${GIT_RELEASE_BRANCH}"
          gh api graphql \
              -F githubRepository="${{ github.repository }}" \
              -F branchName="${GIT_RELEASE_BRANCH}" \
              -F expectedHeadOid="$(git rev-parse HEAD)" \
              -F commitMessage="$(cat ./message.md)" \
              -F commitDetail="$(cat ./detail.md)" \
              -F files[][path]="files/scripts/update-os-release.sh" \
              -F files[][contents]="$(base64 -w0 ./update-os-release.sh)" \
              -F query=@.github/api/create-commit.graphql

          git pull --prune

      - name: "Create PR"
        env:
          GH_TOKEN: "${{ secrets.GH_WORKFLOW_PAT }}"
        run: |
          set -o "errexit" -o "nounset"

          gh pr create \
              --assignee="${{ github.repository_owner }}" \
              --draft \
              --fill-verbose \
              --label="${GITHUB_RELEASE_LABEL}"
          gh pr ready
