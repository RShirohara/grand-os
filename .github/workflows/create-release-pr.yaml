name: "Create Release PR"

on:
  schedule:
    - cron: "0 9 * * 5"
  workflow_dispatch:
    inputs:
      info:
        description: "Reasons for starting the workflow."
        required: true

env:
  GIT_DEFAULT_BRANCH: "main"
  GIT_RELEASE_BRANCH: "bump-os-image-version"
  GITHUB_RELEASE_LABEL: "Type: Release"

jobs:
  create_pr:
    name: "Create PR"
    runs-on: "ubuntu-latest"

    permissions:
      contents: "write"
      pull-requests: "write"

    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8" # v5.0.0
        with:
          fetch-depth: 0

      - name: "Setup Git"
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: "Generate changelog"
        id: "generate_changelog"
        run: |
          set -o "errexit" -o "nounset"

          LATEST_TAG=$(
            git for-each-ref \
              --sort="-creatordate" \
              --count=1 \
              --format="%(refname:short)" \
              "refs/tags/"
          )
          CHANGELOG=$(
            git log --reverse --pretty="format:%s" "${LATEST_TAG}..${GIT_DEFAULT_BRANCH}" \
            | jq --null-input --raw-input --compact-output "[inputs]" \
            | sed --expression="s|'|'\\\\''|g"
          )
          echo "changelog=${CHANGELOG}" | tee --append "${GITHUB_OUTPUT}"

      - name: "Increase image version"
        id: "increase_version"
        run: |
          set -o "errexit" -o "nounset"

          _MAJOR_VERSION=$(
            date "+%Y%m%d"
          )
          set +o "errexit"
          _MINOR_VERSION=$(
            _PREFIX=$(
              grep "^RELEASE_VERSION=\"${_MAJOR_VERSION}" \
                ./files/scripts/add-image-info.sh \
              | sed --expression="s|^.*=||g" --expression="s|\"||g" \
              | cut --delimiter="." --fields="2" \
              | xargs --replace="@" expr @ + 1
            )
            echo "${_PREFIX:-0}"
          )
          set -o "errexit"
          RELEASE_VERSION="${_MAJOR_VERSION}.${_MINOR_VERSION}"
          echo "version=${RELEASE_VERSION}" | tee --append "${GITHUB_OUTPUT}"

      - name: "Generate description"
        run: |
          set -o "errexit" -o "nounset"

          COMMITS=$(
            echo '${{ steps.generate_changelog.outputs.changelog }}' \
            | jq --raw-output ".[]" \
            | sed --expression="s|^|- |g" \
            | sed --null-data \
              --expression="$ s|\\n$||" \
              --expression="s|\\n|\\\\n|g"
          )

          # shellcheck disable=SC2016
          sed \
            --expression="s|\${VERSION}|${{ steps.increase_version.outputs.version }}|g" \
            --expression="s|\${COMMITS}|${COMMITS:-None.}|" \
            --expression="s|\${EVENT_NAME}|${{ github.event_name }}|" \
            --expression='s|\${ADDITIONAL_INFO}|${{ github.event.inputs.info || 'None.' }}|' \
            ./.github/COMMIT_TEMPLATE/release.md \
            > ./release.md
          head --lines=1 ./release.md > ./message.md
          tail --lines=+3 ./release.md > ./detail.md

      - name: "Commit"
        env:
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          set -o "errexit" -o "nounset"

          sed --expression="s|^RELEASE_VERSION=\".*\"$|RELEASE_VERSION=\"${{ steps.increase_version.outputs.version }}\"|g" \
            ./files/scripts/add-image-info.sh \
            > ./add-image-info.sh

          git switch --create "${GIT_RELEASE_BRANCH}"
          git push --set-upstream origin "${GIT_RELEASE_BRANCH}"
          gh api graphql \
            -F githubRepository="${{ github.repository }}" \
            -F branchName="${GIT_RELEASE_BRANCH}" \
            -F expectedHeadOid="$(git rev-parse HEAD)" \
            -F commitMessage="$(cat ./message.md)" \
            -F commitDetail="$(cat ./detail.md)" \
            -F files[][path]="files/scripts/add-image-info.sh" \
            -F files[][contents]="$(base64 -w0 ./add-image-info.sh)" \
            -F query=@.github/api/create-commit.graphql

          git pull --prune

      - name: "Create PR"
        env:
          GH_TOKEN: "${{ secrets.GH_WORKFLOW_PAT }}"
        run: |
          set -o "errexit" -o "nounset"

          gh pr create \
            --assignee="${{ github.repository_owner }}" \
            --draft \
            --fill-verbose \
            --label="${GITHUB_RELEASE_LABEL}"
          gh pr ready
